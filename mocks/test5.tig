/* define valid recursive types */
/*
let
/* define a list */
type intlist = {hd: int, tl: intlist} 

/* define a tree */
type tree ={key: int, children: treelist}
type treelist = {hd: tree, tl: treelist}

var lis:intlist := intlist { hd=0, tl= nil } 

in
	lis
end
*/

let
	type IntList = {head: int, tail: IntList}
	type Tree = {key: int, children: Tree}
	var ls = {head: 0, tail: nil}IntList
in
	ls
end
